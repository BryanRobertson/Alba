#pragma once

#include "Core.hpp"
#include "Core_Thread.hpp"
#include "Core_Function.hpp"
#include "Core_Platform.hpp"

namespace Alba
{
	namespace Core
	{
		//-----------------------------------------------------------------------------------------
		//-----------------------------------------------------------------------------------------
		class Task;

		//-----------------------------------------------------------------------------------------
		// Name	:	TaskWrapper
		// Desc	:	Wrapper around Task that
		//-----------------------------------------------------------------------------------------
		template <class TTaskSystemType>
		class TaskWrapper
		{
			public:

				//=================================================================================
				// Public Constructors
				//=================================================================================

				//=================================================================================
				// Public Methods
				//=================================================================================
			#if 0
				//---------------------------------------------------------------------------------
				//---------------------------------------------------------------------------------
				TaskWrapper<TTaskSystemType> StartChild(TaskFunction /*aTaskFunction*/)
				{
					//myTaskSystem->CreateTask(*myTask, aTaskFunction);
				}

				//---------------------------------------------------------------------------------
				//---------------------------------------------------------------------------------
				TaskWrapper<TTaskSystemType> Then(TaskFunction /*aTaskFunction*/)
				{
					//myTaskSystem->CreateTask(*myTask, aTaskFunction);
				}
			#endif

				//---------------------------------------------------------------------------------
				//---------------------------------------------------------------------------------
				void WaitForAll()
				{
					//myTaskSystem->WaitFor(*myTask);
				}

			private:

				//=================================================================================
				// Private Data
				//=================================================================================
				Task*				myTask = nullptr;
				TTaskSystemType*	myTaskSystem = nullptr;
		};
	}
}
