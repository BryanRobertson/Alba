#pragma once

#include "Core.hpp"
#include "Core_AnyDictionary.hpp"
#include "Core_UniquePtr.hpp"
#include "Core_FixedString.hpp"

//-------------------------------------------------------------------------------------------------
// Name	:	Core_Window.hpp
// Desc	:	Wraps an operating system window on the relevant platform
//-------------------------------------------------------------------------------------------------

namespace Alba
{
	namespace Core
	{
		struct WindowImpl;
		struct WindowEventHandler;

		//-----------------------------------------------------------------------------------------
		// Name	:	WindowParams
		//-----------------------------------------------------------------------------------------
		struct WindowParams
		{
			Pair<int, int>	 myPosition;
			Pair<uint, uint> mySize;
			FixedString<32>	 myTitle = "Alba";
			bool			 myIsHidden = false;
		};

		//-----------------------------------------------------------------------------------------
		// Name	:	Window
		//-----------------------------------------------------------------------------------------
		class Window final
		{
			public:

				//=================================================================================
				// Public Static Methods
				//=================================================================================
				static UniquePtr<Window> Create();

				//=================================================================================
				// Public Destructors
				//=================================================================================
				~Window();

				//=================================================================================
				// Public Methods
				//=================================================================================
	
				//---------------------------------------------------------------------------------
				// Initialise
				//---------------------------------------------------------------------------------
				bool				Init(const WindowParams& aParams);

				//---------------------------------------------------------------------------------
				// Update
				//---------------------------------------------------------------------------------
				bool				Update();

				//---------------------------------------------------------------------------------
				// Window properties
				//---------------------------------------------------------------------------------
				void				SetTitleText(const char* aStr);
				FixedString<32>		GetTitleText() const;

				//---------------------------------------------------------------------------------
				// Event handler
				//---------------------------------------------------------------------------------
				void				SetEventHandler(const WindowEventHandler& aHandler);

				//---------------------------------------------------------------------------------
				// Platform-specific data
				//---------------------------------------------------------------------------------
				inline const AnyDictionary& GetPlatformData() const;

			private:

				//=================================================================================
				// Private Constructors
				//=================================================================================
				Window();

				//=================================================================================
				// Private Methods
				//=================================================================================
				void					Destroy();

				//=================================================================================
				// Private Data
				//=================================================================================

				// Holds platform-specific data for the window
				AnyDictionary			myPlatformData;

				// Implementation
				UniquePtr<WindowImpl>	myImpl;
		};

		//-----------------------------------------------------------------------------------------
		//-----------------------------------------------------------------------------------------
		inline const AnyDictionary& Window::GetPlatformData() const
		{
			return myPlatformData;
		}
	}
}