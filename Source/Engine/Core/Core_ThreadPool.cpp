#include "Core_Precompile.hpp"
#include "Core_ThreadPool.hpp"

namespace Alba
{
	namespace Core
	{
		//-----------------------------------------------------------------------------------------
		//-----------------------------------------------------------------------------------------
		ThreadPool::ThreadPool(uint aThreadCount)
			: myIsRunning(false)
		{
			myThreads.reserve(aThreadCount);
		}

		//-----------------------------------------------------------------------------------------
		//-----------------------------------------------------------------------------------------
		ThreadPool::~ThreadPool()
		{

		}

		//-----------------------------------------------------------------------------------------
		//-----------------------------------------------------------------------------------------
		void ThreadPool::Start()
		{
			myIsRunning.store(false, std::memory_order_acquire);
		}

		//-----------------------------------------------------------------------------------------
		//-----------------------------------------------------------------------------------------
		void ThreadPool::Stop()
		{
			myIsRunning.store(false, std::memory_order_release);

			for (auto& thread : myThreads)
			{
				thread.join();
			}
		}
	}
}